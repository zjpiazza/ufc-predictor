2025-01-17 10:57:08,281 - ðŸ¥Š Starting UFC model training pipeline...
2025-01-17 10:57:08,281 - ðŸ“Š Loading and preparing data...
2025-01-17 10:57:08,287 - Found NaN values in the following columns:
2025-01-17 10:57:08,287 - reach_diff: 1 NaN values
2025-01-17 10:57:08,287 - Filling NaN values with 0
2025-01-17 10:57:08,293 - Training samples: 1364, Test samples: 342
2025-01-17 10:57:08,293 - Feature count: 25
2025-01-17 10:57:08,293 - 
Features used:
2025-01-17 10:57:08,293 - - height_diff
2025-01-17 10:57:08,293 - - reach_diff
2025-01-17 10:57:08,293 - - age_diff
2025-01-17 10:57:08,293 - - fighter_fight_no
2025-01-17 10:57:08,293 - - opponent_fight_no
2025-01-17 10:57:08,293 - - fighter_win_ratio
2025-01-17 10:57:08,293 - - fighter_recent_win_ratio
2025-01-17 10:57:08,293 - - opponent_win_ratio
2025-01-17 10:57:08,293 - - opponent_recent_win_ratio
2025-01-17 10:57:08,293 - - fighter_strikes_landed
2025-01-17 10:57:08,293 - - fighter_strikes_attempted
2025-01-17 10:57:08,293 - - fighter_strikes_accuracy
2025-01-17 10:57:08,293 - - opponent_strikes_landed
2025-01-17 10:57:08,293 - - opponent_strikes_attempted
2025-01-17 10:57:08,293 - - opponent_strikes_accuracy
2025-01-17 10:57:08,293 - - fighter_takedowns
2025-01-17 10:57:08,293 - - fighter_takedown_accuracy
2025-01-17 10:57:08,293 - - opponent_takedowns
2025-01-17 10:57:08,293 - - opponent_takedown_accuracy
2025-01-17 10:57:08,293 - - fighter_knockdowns
2025-01-17 10:57:08,293 - - fighter_ko_ratio
2025-01-17 10:57:08,293 - - opponent_knockdowns
2025-01-17 10:57:08,293 - - opponent_ko_ratio
2025-01-17 10:57:08,294 - - fighter_control_time
2025-01-17 10:57:08,294 - - opponent_control_time
2025-01-17 10:57:08,294 - 
ðŸ§  Training neural network...
2025-01-17 10:57:17,992 - 
ðŸ“ˆ Training logistic regression...
2025-01-17 10:57:17,995 - 
ðŸŽ¯ Evaluating models...
2025-01-17 10:57:18,662 - 
ðŸ’¾ Saving models...
2025-01-17 10:57:18,662 - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-01-17 10:57:18,676 - 
ðŸ“Š Model Performance:
2025-01-17 10:57:18,676 - 
Neural Network:
2025-01-17 10:57:18,676 - Accuracy: 0.5877
2025-01-17 10:57:18,676 - ROC AUC: 0.5896
2025-01-17 10:57:18,676 - 
Classification Report:
2025-01-17 10:57:18,714 - 
              precision    recall  f1-score   support

           0       0.51      0.46      0.48       143
           1       0.64      0.68      0.66       199

    accuracy                           0.59       342
   macro avg       0.57      0.57      0.57       342
weighted avg       0.58      0.59      0.58       342

2025-01-17 10:57:18,714 - 
Logistic Regression:
2025-01-17 10:57:18,714 - Accuracy: 0.6462
2025-01-17 10:57:18,714 - ROC AUC: 0.6935
2025-01-17 10:57:18,714 - 
Classification Report:
2025-01-17 10:57:18,717 - 
              precision    recall  f1-score   support

           0       0.64      0.35      0.45       143
           1       0.65      0.86      0.74       199

    accuracy                           0.65       342
   macro avg       0.64      0.60      0.60       342
weighted avg       0.64      0.65      0.62       342

2025-01-17 10:57:18,717 - 
ðŸŽ‰ Training pipeline completed successfully!
